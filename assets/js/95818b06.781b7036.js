"use strict";(self.webpackChunknotification_center=self.webpackChunknotification_center||[]).push([[2540],{1588:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>c,contentTitle:()=>t,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var n=r(4848),o=r(8453);const s={sidebar_position:4},t="Patron DTO",i={id:"patrones/patron-dto",title:"Patron DTO",description:"Una de las problem\xe1ticas m\xe1s comunes cuando desarrollamos aplicaciones, es dise\xf1ar la forma en que la informaci\xf3n debe viajar desde la capa de servicios a las aplicaciones o capa de presentaci\xf3n, ya que muchas veces por desconocimiento o pereza, utilizamos las clases de entidades para retornar los datos, lo que ocasiona que retornemos m\xe1s datos de los necesarios o incluso, tengamos que ir en m\xe1s de una ocasi\xf3n a la capa de servicios para recuperar los datos requeridos.",source:"@site/docs/patrones/patron-dto.md",sourceDirName:"patrones",slug:"/patrones/patron-dto",permalink:"/arquitectura/docs/patrones/patron-dto",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/patrones/patron-dto.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Patron Mediator",permalink:"/arquitectura/docs/patrones/patro-mediator"},next:{title:"Patron Result",permalink:"/arquitectura/docs/patrones/patron-result"}},c={},d=[];function p(e){const a={a:"a",admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"patron-dto",children:"Patron DTO"}),"\n",(0,n.jsx)(a.p,{children:"Una de las problem\xe1ticas m\xe1s comunes cuando desarrollamos aplicaciones, es dise\xf1ar la forma en que la informaci\xf3n debe viajar desde la capa de servicios a las aplicaciones o capa de presentaci\xf3n, ya que muchas veces por desconocimiento o pereza, utilizamos las clases de entidades para retornar los datos, lo que ocasiona que retornemos m\xe1s datos de los necesarios o incluso, tengamos que ir en m\xe1s de una ocasi\xf3n a la capa de servicios para recuperar los datos requeridos."}),"\n",(0,n.jsx)(a.admonition,{title:"Data Transfer Object",type:"tip",children:(0,n.jsxs)(a.p,{children:["Una libreria que nos sirve para realizar este tipo de adaptacion es\r\n",(0,n.jsx)(a.a,{href:"https://github.com/MapsterMapper/Mapster",children:(0,n.jsx)(a.strong,{children:"Mapster"})}),"\r\n, La libreria mas comun usada en .net es AutoMapper, sin embargo no es la mas eficiente."]})}),"\n",(0,n.jsx)(a.p,{children:"Mapster, es muy rico, en la forma que se pueden convertir Entidades de dominio a\r\nentidades DTO. En MediatR, estos Dto, tambien suele llamarseles objetos del tipo Request y Response."}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-cs",metastring:'title="PruebaMapster.cs"',children:'//Se puede hacer de esta forma\r\nvar dest = src.Adapt<TSource, TDestination>();\r\n\r\n//o bien de esta otra, no se necesita ninguna configuracion adicional\r\nvar dest = src.Adapt<TDestination>();\r\n\r\n//Si los datos a retornar son los mismo que la entidad, podemos usar la generacion\r\n// de codigo de Mapster.\r\n \r\n[AdaptTo("[name]Dto"), GenerateMapper]\r\npublic class Cliente {\r\n    ...\r\n}\r\n\r\n//Tambien podemos registrarlo de esta forma\r\npublic class MapsterRegister : ICodeGenerationRegister\r\n{\r\n    public void Register(CodeGenerationConfig config)\r\n    {\r\n        //Crear objetos adaptadores para todas las entidades\r\n        config.AdaptTo("[name]Dto")\r\n            .ForAllTypesInNamespace(Assembly.GetExecutingAssembly(), "Makers.NotificacionCentrl.Domains.Entities");\r\n\r\n        //Crear solo para lo siguientes Tipos\r\n        config.GenerateMapper("[name]Dto")\r\n                .ForType<Cliente>()\r\n                .ForType<Portafolio>();\r\n    }\r\n}\r\n\n'})})]})}function l(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>t,x:()=>i});var n=r(6540);const o={},s=n.createContext(o);function t(e){const a=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);