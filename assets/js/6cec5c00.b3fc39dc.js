"use strict";(self.webpackChunknotification_center=self.webpackChunknotification_center||[]).push([[9418],{9932:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>l});var r=a(4848),o=a(8453);const t={sidebar_position:5},i="Patron Outbox",s={id:"patrones/patron-outbox",title:"Patron Outbox",description:"El Outbox Pattern es un patr\xf3n de dise\xf1o utilizado en el desarrollo de sistemas distribuidos para garantizar la consistencia y confiabilidad en el procesamiento de operaciones secundarias o eventos en una aplicaci\xf3n.",source:"@site/docs/patrones/patron-outbox.md",sourceDirName:"patrones",slug:"/patrones/patron-outbox",permalink:"/arquitectura/docs/patrones/patron-outbox",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/patrones/patron-outbox.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Guard Clauses",permalink:"/arquitectura/docs/patrones/patron-guard"},next:{title:"Patron Strategy",permalink:"/arquitectura/docs/patrones/patron-strategy"}},c={},l=[{value:"Cuando Usarlo",id:"cuando-usarlo",level:2},{value:"Implementaci\xf3n Makers",id:"implementaci\xf3n-makers",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"patron-outbox",children:"Patron Outbox"}),"\n",(0,r.jsx)(n.p,{children:"El Outbox Pattern es un patr\xf3n de dise\xf1o utilizado en el desarrollo de sistemas distribuidos para garantizar la consistencia y confiabilidad en el procesamiento de operaciones secundarias o eventos en una aplicaci\xf3n.\r\nCuando una aplicaci\xf3n necesita realizar acciones adicionales, como enviar correos electr\xf3nicos, generar eventos o realizar operaciones que no son transaccionales, surge la necesidad de asegurar que estas acciones se realicen de manera consistente y confiable."}),"\n",(0,r.jsx)(n.h2,{id:"cuando-usarlo",children:"Cuando Usarlo"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Env\xedo de correos electr\xf3nicos y notificaciones: Cuando necesitas enviar correos electr\xf3nicos de confirmaci\xf3n, notificaciones o mensajes a los usuarios despu\xe9s de ciertas operaciones, como registros o compras, el Outbox Pattern garantiza que estos correos electr\xf3nicos se entreguen de manera confiable sin afectar el rendimiento de la operaci\xf3n principal."}),"\n",(0,r.jsx)(n.li,{children:"Generaci\xf3n de eventos y notificaciones: Si tu aplicaci\xf3n genera eventos para otros servicios o sistemas, el Outbox Pattern asegura que estos eventos se propaguen incluso si ocurre un fallo en la operaci\xf3n principal."}),"\n",(0,r.jsx)(n.li,{children:"Procesamiento asincr\xf3nico: Cuando una operaci\xf3n secundaria es asincr\xf3nica y no necesita completarse inmediatamente despu\xe9s de la operaci\xf3n principal, el Outbox Pattern te permite realizar el procesamiento en segundo plano sin afectar el flujo principal."}),"\n",(0,r.jsx)(n.li,{children:"Mejora de la escalabilidad: Utilizar un Background Worker para procesar los mensajes del Outbox permite liberar recursos de la aplicaci\xf3n principal, lo que contribuye a una mejor escalabilidad y rendimiento del sistema."}),"\n",(0,r.jsx)(n.li,{children:"Trazabilidad y seguimiento de eventos: Almacenar los mensajes del Outbox en una tabla de la base de datos permite rastrear las operaciones secundarias realizadas y tener un registro claro de los eventos procesados."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"implementaci\xf3n-makers",children:"Implementaci\xf3n Makers"}),"\n",(0,r.jsx)(n.p,{children:'Este patr\xf3n proporciona una soluci\xf3n eficaz para publicar eventos de forma fiable. La idea de este enfoque es tener una tabla de "Bandeja de salida" en la base de datos del servicio. Al recibir una solicitud de una operacion, no solo se realiza una inserci\xf3n en la tabla de la operaci\xf3n, sino que tambi\xe9n se inserta un registro que representa el evento en la tabla Bandeja de salida. Las dos acciones de la base de datos se realizan como parte de la misma transacci\xf3n.'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cs",metastring:'title="IReadRepository.cs"',children:'public sealed class ApplicationDbContext : DbContext, IUnitOfWork\r\n{\r\n //Sobreescribimos el metodo de guardar datos de la entidad.\r\n public override async Task<int> SaveChangesAsync(CancellationToken cancellationToken = default)\r\n {\r\n     try\r\n     {\r\n         AddDomainEventsAsOutboxMessages(); //Outbox\r\n         int result = await base.SaveChangesAsync(cancellationToken);\r\n         return result;\r\n     }\r\n     catch (DbUpdateConcurrencyException ex)\r\n     {\r\n         throw new ConcurrencyException("Concurrency exception occurred.", ex);\r\n     }\r\n }\r\n \r\n //Registramos todos los eventos del dominio disparados por las entidades\r\n//luego una backgrounservice o cualquier implementacion de cola se encargara de procesarlo\r\nprivate void AddDomainEventsAsOutboxMessages()\r\n {\r\n     var outboxMessages = ChangeTracker\r\n         .Entries<Entity>()\r\n         .Select(entry => entry.Entity)\r\n         .SelectMany(entity =>\r\n         {\r\n             IReadOnlyList<IDomainEvent> domainEvents = entity.GetDomainEvents();\r\n             entity.ClearDomainEvents();\r\n             return domainEvents;\r\n         })\r\n         .Select(domainEvent => new OutboxMessage(\r\n             Guid.NewGuid(),\r\n             _dateTimeProvider.UtcNow, //un provedor de hora y fecha\r\n             domainEvent.GetType().Name,\r\n             JsonConvert.SerializeObject(domainEvent, JsonSerializerSettings)))\r\n         .ToList();\r\n     AddRange(outboxMessages);\r\n }\r\n \r\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{title:"Proyecto de Referencia (En desarrollo)",type:"info",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://dev.azure.com/makersfunds/_git/MakersArchitecture",children:"Makers Referencia"})})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>s});var r=a(6540);const o={},t=r.createContext(o);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);