"use strict";(self.webpackChunknotification_center=self.webpackChunknotification_center||[]).push([[3310],{7821:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>l,frontMatter:()=>d,metadata:()=>r,toc:()=>c});var t=o(4848),s=o(8453);const d={sidebar_position:4},i="Bounded Context",r={id:"ddd/bouncontext",title:"Bounded Context",description:"Los contextos delimitados consisten en dividir un sistema grande en partes m\xe1s peque\xf1as y manejables, cada una de ellas con modelos y conjuntos de reglas distintos.",source:"@site/docs/ddd/bouncontext.md",sourceDirName:"ddd",slug:"/ddd/bouncontext",permalink:"/arquitectura/docs/ddd/bouncontext",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ddd/bouncontext.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Value Objects",permalink:"/arquitectura/docs/ddd/valueobject"},next:{title:"Servicios",permalink:"/arquitectura/docs/ddd/services"}},a={},c=[];function u(e){const n={admonition:"admonition",h1:"h1",img:"img",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"bounded-context",children:"Bounded Context"}),"\n",(0,t.jsx)(n.p,{children:'Los contextos delimitados consisten en dividir un sistema grande en partes m\xe1s peque\xf1as y manejables, cada una de ellas con modelos y conjuntos de reglas distintos.\r\nLos Bounded contexts delimitan \xe1reas espec\xedficas dentro de un sistema en las que se aplica un lenguaje, un conjunto de reglas y unos modelos concretos.\r\nEs como crear una "frontera ling\xfc\xedstica" para evitar ambig\xfcedades.'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Boundend Context",src:o(6969).A+"",width:"800",height:"711"})}),"\n",(0,t.jsx)(n.p,{children:"A la hora de integrar Bounded Contexts es importante recordar que los mismos deben ser aut\xf3nomos. Cada uno es desarrollado de forma independiente y aislada de los dem\xe1s. Su codebase puede ser evolucionado sin miedo a romper funcionalidades de otro Bounded Context. No hay dependencias de c\xf3digo fuente entre Bounded Contexts. Creamos estos contextos para reducir la complejidad de nuestro sistema y poder entregar valor de negocio r\xe1pidamente, por ende es muy importante intentar respetar su autonom\xeda.\r\nPor eso es que, estos contexto delimitados pueden servir de base para monolitos modulares, o una arquitectura de microservicios."}),"\n",(0,t.jsx)(n.admonition,{title:"MicroServicios",type:"tip",children:(0,t.jsx)(n.p,{children:"Si bien es cierto que en algunas implementaciones un bounded context puede coincidir con un microservicio, no son lo mismo. Un bounded context es m\xe1s un concepto de dise\xf1o de dominio y arquitectura de software, mientras que un microservicio es una forma de implementar esa arquitectura, donde un bounded context puede ser una unidad l\xf3gica dentro de un microservicio o puede estar dividido en m\xfaltiples microservicios, dependiendo de la complejidad del dominio y los requisitos del sistema"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Ejemplo"}),' : En un sistema de comercio electr\xf3nico, el contexto de \u201cOrder Management" puede tener reglas y modelos diferentes que el contexto de \u201cShipping".']})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},6969:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/context-2392fe58603b12cec2476649a0421b1b.jpeg"},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>r});var t=o(6540);const s={},d=t.createContext(s);function i(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);